# -*- coding: utf-8 -*-

# Form implementation generated from reading ui file 'harvester.ui'
#
# Created by: PyQt5 UI code generator 5.15.4
#
# WARNING: Any manual changes made to this file will be lost when pyuic5 is
# run again.  Do not edit this file unless you know what you are doing.


from PyQt5 import QtCore, QtGui, QtWidgets


class Ui_MainWindow(object):
    def setupUi(self, MainWindow):
        MainWindow.setObjectName("MainWindow")
        MainWindow.resize(796, 543)
        icon = QtGui.QIcon()
        icon.addPixmap(QtGui.QPixmap(":/icon/K:/Dropbox/Python/icons-rss/icons8-harvester-100.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        MainWindow.setWindowIcon(icon)
        self.centralwidget = QtWidgets.QWidget(MainWindow)
        self.centralwidget.setObjectName("centralwidget")
        self.gridLayout = QtWidgets.QGridLayout(self.centralwidget)
        self.gridLayout.setContentsMargins(4, 4, 4, 4)
        self.gridLayout.setHorizontalSpacing(7)
        self.gridLayout.setObjectName("gridLayout")
        self.splitter = QtWidgets.QSplitter(self.centralwidget)
        self.splitter.setOrientation(QtCore.Qt.Horizontal)
        self.splitter.setObjectName("splitter")
        self.layoutWidget = QtWidgets.QWidget(self.splitter)
        self.layoutWidget.setObjectName("layoutWidget")
        self.verticalLayout = QtWidgets.QVBoxLayout(self.layoutWidget)
        self.verticalLayout.setContentsMargins(0, 0, 0, 0)
        self.verticalLayout.setObjectName("verticalLayout")
        self.lineSearch = QtWidgets.QLineEdit(self.layoutWidget)
        self.lineSearch.setStatusTip("")
        self.lineSearch.setWhatsThis("")
        self.lineSearch.setClearButtonEnabled(True)
        self.lineSearch.setObjectName("lineSearch")
        self.verticalLayout.addWidget(self.lineSearch)
        self.treeMain = QtWidgets.QTreeWidget(self.layoutWidget)
        self.treeMain.setContextMenuPolicy(QtCore.Qt.CustomContextMenu)
        self.treeMain.setAlternatingRowColors(False)
        self.treeMain.setHeaderHidden(True)
        self.treeMain.setObjectName("treeMain")
        self.treeMain.headerItem().setText(0, "1")
        self.verticalLayout.addWidget(self.treeMain)
        self.gridLayout.addWidget(self.splitter, 0, 0, 1, 1)
        MainWindow.setCentralWidget(self.centralwidget)
        self.menubar = QtWidgets.QMenuBar(MainWindow)
        self.menubar.setGeometry(QtCore.QRect(0, 0, 796, 26))
        self.menubar.setObjectName("menubar")
        self.menuFile = QtWidgets.QMenu(self.menubar)
        self.menuFile.setObjectName("menuFile")
        self.menuEdit = QtWidgets.QMenu(self.menubar)
        self.menuEdit.setObjectName("menuEdit")
        self.menuView = QtWidgets.QMenu(self.menubar)
        self.menuView.setObjectName("menuView")
        self.menuTools = QtWidgets.QMenu(self.menubar)
        self.menuTools.setObjectName("menuTools")
        MainWindow.setMenuBar(self.menubar)
        self.statusbar = QtWidgets.QStatusBar(MainWindow)
        self.statusbar.setObjectName("statusbar")
        MainWindow.setStatusBar(self.statusbar)
        self.actionSubscribe = QtWidgets.QAction(MainWindow)
        self.actionSubscribe.setObjectName("actionSubscribe")
        self.actionNew_Folder = QtWidgets.QAction(MainWindow)
        self.actionNew_Folder.setObjectName("actionNew_Folder")
        self.actionNew_Folder_2 = QtWidgets.QAction(MainWindow)
        self.actionNew_Folder_2.setObjectName("actionNew_Folder_2")
        self.actionImport_Feeds = QtWidgets.QAction(MainWindow)
        self.actionImport_Feeds.setObjectName("actionImport_Feeds")
        self.actionExport_Feeds = QtWidgets.QAction(MainWindow)
        self.actionExport_Feeds.setObjectName("actionExport_Feeds")
        self.actionDatabase_Maintenance = QtWidgets.QAction(MainWindow)
        self.actionDatabase_Maintenance.setStatusTip("")
        self.actionDatabase_Maintenance.setObjectName("actionDatabase_Maintenance")
        self.actionExit = QtWidgets.QAction(MainWindow)
        self.actionExit.setObjectName("actionExit")
        self.actionMark_All_Feeds_Read = QtWidgets.QAction(MainWindow)
        self.actionMark_All_Feeds_Read.setObjectName("actionMark_All_Feeds_Read")
        self.actionFeed_Properties = QtWidgets.QAction(MainWindow)
        self.actionFeed_Properties.setObjectName("actionFeed_Properties")
        self.actionFind_in_Page = QtWidgets.QAction(MainWindow)
        self.actionFind_in_Page.setObjectName("actionFind_in_Page")
        self.actionUpdate_All_Feeds = QtWidgets.QAction(MainWindow)
        self.actionUpdate_All_Feeds.setObjectName("actionUpdate_All_Feeds")
        self.actionUpdate_Current_Feed = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Current_Feed.setObjectName("actionUpdate_Current_Feed")
        self.actionSearch_Feeds = QtWidgets.QAction(MainWindow)
        self.actionSearch_Feeds.setObjectName("actionSearch_Feeds")
        self.actionCleanup = QtWidgets.QAction(MainWindow)
        self.actionCleanup.setObjectName("actionCleanup")
        self.actionMark_Older_As_Read = QtWidgets.QAction(MainWindow)
        self.actionMark_Older_As_Read.setObjectName("actionMark_Older_As_Read")
        self.actionOptions = QtWidgets.QAction(MainWindow)
        icon1 = QtGui.QIcon()
        icon1.addPixmap(QtGui.QPixmap(":/icon/K:/Dropbox/Python/icons-rss/icons8-settings-100.png"), QtGui.QIcon.Normal, QtGui.QIcon.Off)
        self.actionOptions.setIcon(icon1)
        self.actionOptions.setObjectName("actionOptions")
        self.actionNew_Subscription = QtWidgets.QAction(MainWindow)
        self.actionNew_Subscription.setObjectName("actionNew_Subscription")
        self.actionMark_Folder_Read = QtWidgets.QAction(MainWindow)
        self.actionMark_Folder_Read.setObjectName("actionMark_Folder_Read")
        self.actionUpdate_Folder = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Folder.setObjectName("actionUpdate_Folder")
        self.actionDelete_Folder = QtWidgets.QAction(MainWindow)
        self.actionDelete_Folder.setObjectName("actionDelete_Folder")
        self.actionMark_Read = QtWidgets.QAction(MainWindow)
        self.actionMark_Read.setObjectName("actionMark_Read")
        self.actionUnsubscribe = QtWidgets.QAction(MainWindow)
        self.actionUnsubscribe.setObjectName("actionUnsubscribe")
        self.actionMove_Feed = QtWidgets.QAction(MainWindow)
        self.actionMove_Feed.setObjectName("actionMove_Feed")
        self.actionUpdate_Feed = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Feed.setObjectName("actionUpdate_Feed")
        self.actionFeed_Properties_2 = QtWidgets.QAction(MainWindow)
        self.actionFeed_Properties_2.setObjectName("actionFeed_Properties_2")
        self.actionUpdate_Reddit = QtWidgets.QAction(MainWindow)
        self.actionUpdate_Reddit.setObjectName("actionUpdate_Reddit")
        self.actionLoad_Database = QtWidgets.QAction(MainWindow)
        self.actionLoad_Database.setObjectName("actionLoad_Database")
        self.actionMost_Recent = QtWidgets.QAction(MainWindow)
        self.actionMost_Recent.setObjectName("actionMost_Recent")
        self.actionIncrease_Text_Size = QtWidgets.QAction(MainWindow)
        self.actionIncrease_Text_Size.setObjectName("actionIncrease_Text_Size")
        self.actionDecrease_Text_Size = QtWidgets.QAction(MainWindow)
        self.actionDecrease_Text_Size.setObjectName("actionDecrease_Text_Size")
        self.menuFile.addAction(self.actionSubscribe)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionNew_Folder_2)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionImport_Feeds)
        self.menuFile.addAction(self.actionExport_Feeds)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionLoad_Database)
        self.menuFile.addAction(self.actionDatabase_Maintenance)
        self.menuFile.addSeparator()
        self.menuFile.addAction(self.actionExit)
        self.menuEdit.addAction(self.actionMark_All_Feeds_Read)
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionFeed_Properties)
        self.menuEdit.addSeparator()
        self.menuEdit.addSeparator()
        self.menuEdit.addAction(self.actionFind_in_Page)
        self.menuView.addAction(self.actionMost_Recent)
        self.menuView.addSeparator()
        self.menuView.addSeparator()
        self.menuView.addAction(self.actionIncrease_Text_Size)
        self.menuView.addAction(self.actionDecrease_Text_Size)
        self.menuTools.addAction(self.actionUpdate_All_Feeds)
        self.menuTools.addAction(self.actionUpdate_Current_Feed)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionUpdate_Reddit)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionSearch_Feeds)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionCleanup)
        self.menuTools.addAction(self.actionMark_Older_As_Read)
        self.menuTools.addSeparator()
        self.menuTools.addAction(self.actionOptions)
        self.menubar.addAction(self.menuFile.menuAction())
        self.menubar.addAction(self.menuEdit.menuAction())
        self.menubar.addAction(self.menuView.menuAction())
        self.menubar.addAction(self.menuTools.menuAction())

        self.retranslateUi(MainWindow)
        QtCore.QMetaObject.connectSlotsByName(MainWindow)

    def retranslateUi(self, MainWindow):
        _translate = QtCore.QCoreApplication.translate
        MainWindow.setWindowTitle(_translate("MainWindow", "Harvester"))
        self.lineSearch.setPlaceholderText(_translate("MainWindow", "Search by feed name"))
        self.menuFile.setTitle(_translate("MainWindow", "File"))
        self.menuEdit.setTitle(_translate("MainWindow", "Edit"))
        self.menuView.setTitle(_translate("MainWindow", "View"))
        self.menuTools.setTitle(_translate("MainWindow", "Tools"))
        self.actionSubscribe.setText(_translate("MainWindow", "Subscribe"))
        self.actionNew_Folder.setText(_translate("MainWindow", "--"))
        self.actionNew_Folder_2.setText(_translate("MainWindow", "New Folder"))
        self.actionImport_Feeds.setText(_translate("MainWindow", "Import Feeds"))
        self.actionImport_Feeds.setStatusTip(_translate("MainWindow", "Import feed details from an OPML file."))
        self.actionExport_Feeds.setText(_translate("MainWindow", "Export Feeds"))
        self.actionDatabase_Maintenance.setText(_translate("MainWindow", "Database Maintenance"))
        self.actionExit.setText(_translate("MainWindow", "Exit"))
        self.actionExit.setShortcut(_translate("MainWindow", "Alt+X"))
        self.actionMark_All_Feeds_Read.setText(_translate("MainWindow", "Mark All Feeds Read"))
        self.actionFeed_Properties.setText(_translate("MainWindow", "Feed Properties"))
        self.actionFind_in_Page.setText(_translate("MainWindow", "Find in Page"))
        self.actionFind_in_Page.setShortcut(_translate("MainWindow", "Ctrl+F"))
        self.actionUpdate_All_Feeds.setText(_translate("MainWindow", "Update All Feeds"))
        self.actionUpdate_Current_Feed.setText(_translate("MainWindow", "Update Current Feed"))
        self.actionSearch_Feeds.setText(_translate("MainWindow", "Search Feeds"))
        self.actionCleanup.setText(_translate("MainWindow", "Cleanup"))
        self.actionMark_Older_As_Read.setText(_translate("MainWindow", "Mark Older As Read"))
        self.actionOptions.setText(_translate("MainWindow", "Options"))
        self.actionNew_Subscription.setText(_translate("MainWindow", "New Subscription"))
        self.actionMark_Folder_Read.setText(_translate("MainWindow", "Mark Folder Read"))
        self.actionUpdate_Folder.setText(_translate("MainWindow", "Update Folder"))
        self.actionDelete_Folder.setText(_translate("MainWindow", "Delete Folder"))
        self.actionMark_Read.setText(_translate("MainWindow", "Mark Read"))
        self.actionUnsubscribe.setText(_translate("MainWindow", "Unsubscribe"))
        self.actionMove_Feed.setText(_translate("MainWindow", "Move Feed"))
        self.actionUpdate_Feed.setText(_translate("MainWindow", "Update Feed"))
        self.actionFeed_Properties_2.setText(_translate("MainWindow", "Feed Properties"))
        self.actionUpdate_Reddit.setText(_translate("MainWindow", "Update Reddit"))
        self.actionLoad_Database.setText(_translate("MainWindow", "Load Database"))
        self.actionMost_Recent.setText(_translate("MainWindow", "Most Recent"))
        self.actionIncrease_Text_Size.setText(_translate("MainWindow", "Increase Text Size"))
        self.actionDecrease_Text_Size.setText(_translate("MainWindow", "Decrease Text Size"))
